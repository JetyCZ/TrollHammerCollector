Index: src/main/java/net/jetensky/trollhammer/Application.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/jetensky/trollhammer/Application.java	(revision e4277fa5860c7939b67238bc7611065b668e7eda)
+++ src/main/java/net/jetensky/trollhammer/Application.java	(revision )
@@ -1,34 +1,22 @@
 package net.jetensky.trollhammer;
 
 import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
-import org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder;
-import org.springframework.boot.context.properties.ConfigurationProperties;
-import org.springframework.boot.context.properties.EnableConfigurationProperties;
-import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.ComponentScan;
-import org.springframework.context.annotation.Configuration;
-import org.springframework.context.annotation.Primary;
-import org.springframework.transaction.annotation.EnableTransactionManagement;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
 
-import javax.sql.DataSource;
-
+/*
 @Configuration
 @EnableAutoConfiguration
 @EnableConfigurationProperties
 @ComponentScan
 @EnableTransactionManagement
+*/
+@SpringBootApplication
 public class Application {
 
     public static void main(String[] args) {
-        SpringApplication.run(Application.class, args);
+        SpringApplication.run(Application.class,args);
     }
 
 
-    @Bean
-    @Primary
-    @ConfigurationProperties(prefix="datasource.trollkiller")
-    public DataSource waiDataSource() {
-        return DataSourceBuilder.create().build();
-    }
+
 }
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/application.properties	(revision e4277fa5860c7939b67238bc7611065b668e7eda)
+++ src/main/resources/application.properties	(revision )
@@ -1,5 +1,5 @@
 server.context-path=/trollhammer
-server.port=8170
+server.port=12456
 
 datasource.trollkiller.url=jdbc:postgresql://localhost:5432/trollkillerdb
 datasource.trollkiller.username=trollkiller
Index: src/main/java/net/jetensky/trollhammer/dto/Comment.java
===================================================================
--- src/main/java/net/jetensky/trollhammer/dto/Comment.java	(revision e4277fa5860c7939b67238bc7611065b668e7eda)
+++ src/main/java/net/jetensky/trollhammer/dto/Comment.java	(revision e4277fa5860c7939b67238bc7611065b668e7eda)
@@ -1,17 +0,0 @@
-package net.jetensky.trollhammer.dto;
-
-import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
-import javax.persistence.GenerationType;
-import javax.persistence.Id;
-
-@Entity
-public class Comment {
-
-    @Id
-    @GeneratedValue(
-            strategy = GenerationType.IDENTITY
-    )
-    private long id;
-    String bodyText;
-}
Index: src/main/java/net/jetensky/trollhammer/dto/Portal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/net/jetensky/trollhammer/dto/Portal.java	(revision e4277fa5860c7939b67238bc7611065b668e7eda)
+++ src/main/java/net/jetensky/trollhammer/dto/Portal.java	(revision )
@@ -1,18 +1,13 @@
 package net.jetensky.trollhammer.dto;
 
-import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
-import javax.persistence.GenerationType;
-import javax.persistence.Id;
-
-@Entity
 public class Portal {
-     @Id
-     @GeneratedValue(
-            strategy = GenerationType.IDENTITY
-        )
+    
     private long id;
 
+    public Portal(long id) {
+        this.id = id;
+    }
+
     public long getId() {
         return id;
     }
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision e4277fa5860c7939b67238bc7611065b668e7eda)
+++ build.gradle	(revision )
@@ -26,8 +26,8 @@
 dependencies {
     compile 'org.codehaus.groovy:groovy-all:2.3.11'
     compile("org.springframework.boot:spring-boot-starter-web")
-    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
-    compile "org.postgresql:postgresql:9.3-1102-jdbc41"
+    //compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
+    //compile "org.postgresql:postgresql:9.3-1102-jdbc41"
 
 
     testCompile group: 'junit', name: 'junit', version: '4.12'
Index: src/test/groovy/net/jetensky/trollhammer/dao/PortalDao.groovy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/groovy/net/jetensky/trollhammer/dao/PortalDao.groovy	(revision )
+++ src/test/groovy/net/jetensky/trollhammer/dao/PortalDao.groovy	(revision )
@@ -0,0 +1,21 @@
+package net.jetensky.trollhammer.dao
+
+import net.jetensky.trollhammer.dto.Portal
+
+
+class PortalDao {
+
+    private HashMap<Long,Portal> portals = new HashMap<>();
+    private static long idCounter = 0;
+
+
+    long save() {
+        Portal portal = new Portal(++idCounter);
+        portals.put(portal.id,portal);
+        return portal.id;
+    }
+
+    Portal get(long i) {
+        return portals.get(i);
+    }
+}
Index: src/main/resources/static/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/static/index.html	(revision )
+++ src/main/resources/static/index.html	(revision )
@@ -0,0 +1,10 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+</head>
+<body>
+<h1>Hello world!</h1>
+</body>
+</html>
\ No newline at end of file
Index: src/main/java/net/jetensky/trollhammer/dao/PortalDao.java
===================================================================
--- src/main/java/net/jetensky/trollhammer/dao/PortalDao.java	(revision e4277fa5860c7939b67238bc7611065b668e7eda)
+++ src/main/java/net/jetensky/trollhammer/dao/PortalDao.java	(revision e4277fa5860c7939b67238bc7611065b668e7eda)
@@ -1,22 +0,0 @@
-package net.jetensky.trollhammer.dao;
-
-import net.jetensky.trollhammer.dto.Portal;
-import org.springframework.data.jpa.repository.JpaRepository;
-import org.springframework.stereotype.Component;
-
-@Component
-public interface PortalDao extends JpaRepository<Portal, Long> {
-
-    /*long id=0;
-    Map<Long, Portal> db = new HashMap<>();
-
-    public Portal get(Long id) {
-        return db.get(id);
-    };
-
-    public void save(Portal portal) {
-        portal.setId(id);
-        db.put(id, portal);
-        id++;
-    }*/
-}
Index: src/test/groovy/net/jetensky/trollhammer/dao/PortalDaoTest.groovy
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/groovy/net/jetensky/trollhammer/dao/PortalDaoTest.groovy	(revision e4277fa5860c7939b67238bc7611065b668e7eda)
+++ src/test/groovy/net/jetensky/trollhammer/dao/PortalDaoTest.groovy	(revision )
@@ -1,29 +1,17 @@
 package net.jetensky.trollhammer.dao
 
-import net.jetensky.trollhammer.Application
 import net.jetensky.trollhammer.dto.Portal
-import org.springframework.beans.factory.annotation.Autowired
-import org.springframework.boot.test.context.SpringBootTest
-import org.springframework.test.context.ContextConfiguration
 import spock.lang.Specification
 
-import javax.transaction.Transactional
-
-@SpringBootTest
-@ContextConfiguration(classes = Application)
 class PortalDaoTest extends Specification {
-
-    @Autowired PortalDao portalDao
-
-    @Transactional
-    def "getOne"() {
-        def portal = new Portal()
+    def "saved portal can be read"() {
         when:
-            portalDao.save(portal)
-            def read = portalDao.getOne(portal.getId())
-
+        PortalDao portalDao = new PortalDao();
+        long id = portalDao.save();
+        Portal retVal = portalDao.get(id);
         then:
-            read != null
-            read.id != null
+        retVal != null;
+        id == retVal.getId();
     }
+
 }
